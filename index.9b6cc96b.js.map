{"mappings":"ICcI,EACA,EAsEA,EAnFJ,MAAM,EAAS,SAAS,aAAa,CAAC,eAEtC,OAAO,gBAAgB,CAAC,SAAU,KAC5B,SAAS,IAAI,CAAC,SAAS,CAAG,IAAM,SAAS,eAAe,CAAC,SAAS,CAAG,GACvE,EAAO,KAAK,CAAC,OAAO,CAAG,QAEvB,EAAO,KAAK,CAAC,OAAO,CAAG,MAE3B,GAEA,MAAM,EAAW,SAAS,aAAa,CAAC,mBAClC,EAAgB,SAAS,aAAa,CAAC,kBAG7C,IAAI,EAAmB,EAEvB,MAAM,EAAc,CAClB,YAAa,OAAO,UAAU,CAAC,sBAC/B,aAAc,OAAO,UAAU,CAAC,8CAChC,YAAa,OAAO,UAAU,CAAC,sBACjC,EAEA,IAAK,MAAM,KAAO,EAChB,CAAW,CAAC,EAAI,CAAC,gBAAgB,CAAC,SAAU,IAAM,EAAiB,IAKrE,SAAS,EAAiB,CAAG,EAC3B,IAAK,IAAM,KAAO,EAChB,GAAI,CAAG,CAAC,EAAI,CAAC,OAAO,CAClB,OAAQ,GACN,IAAK,cAIL,IAAK,gBAHH,AAuBV,SAA0B,CAAC,EACrB,IACF,EAAW,mBAAmB,CAAC,aAAc,GAC7C,EAAW,MAAM,IAGnB,IAAM,EAAgB,KAAK,KAAK,CAAC,EAAc,WAAW,CAAG,EAAS,WAAW,EAEjF,AADA,CAAA,EAAa,SAAS,aAAa,CAAC,KAApC,EACW,SAAS,CAAC,GAAG,CAAC,sBAEzB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAe,IAAK,CACtC,IAAM,EAAO,SAAS,aAAa,CAAC,MACpC,EAAK,SAAS,CAAC,GAAG,CAAC,4BACnB,EAAK,YAAY,CAAC,aAAc,GAChC,EAAW,MAAM,CAAC,EACpB,CAEA,EAAW,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,oCAC3C,EAAS,MAAM,CAAC,GAChB,EAAQ,EAAW,QAAQ,CAE3B,EAAc,mBAAmB,CAAC,SAAU,GAC5C,EAAc,gBAAgB,CAAC,SAAU,GAEzC,EAAW,gBAAgB,CAAC,aAAc,EAC5C,IA/CU,KAMF,KAAK,cACH,GAAI,CAAC,EACH,OAEA,EAAW,mBAAmB,CAAC,aAAc,GAC7C,EAAW,MAAM,EAMvB,CAGN,CA+BA,SAAS,IACH,IACJ,EAAc,CAAA,EAEd,WAAW,KACT,IAAM,EAAS,iBAAiB,GAAe,SAAS,CAClD,EAAqB,KAAK,KAAK,CAAC,AAAC,CAAA,EAAc,UAAU,CAAI,CAAC,EAAO,KAAK,CAAC,EAAG,GAAA,EAAQ,EAAS,WAAW,EAC5G,IAAqB,IACvB,CAAK,CAAC,EAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,oCACzC,CAAK,CAAC,EAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,oCACxC,EAAmB,GAErB,EAAc,CAAA,CAChB,EAAG,IACL,CAEA,SAAS,EAAsB,CAAK,EAC9B,EAAM,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,6BAClC,AAIJ,SAAwB,CAAK,EAC3B,IAAM,EAAgB,OAAO,GAC7B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAC5B,IAAM,GACR,CAAK,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,oCACvB,EAAc,UAAU,CAAG,EAAS,WAAW,CAAG,GAElD,CAAK,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,mCAGhC,EAdmB,EAAM,MAAM,CAAC,OAAO,CAAC,KAAK,CAE7C,CA/EA,EAAiB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nconst button = document.querySelector(\".scroll-top\");\nwindow.addEventListener(\"scroll\", ()=>{\n    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) button.style.display = \"block\";\n    else button.style.display = \"none\";\n});\nconst carousel = document.querySelector(\".gallery-slider\");\nconst carouselTrack = document.querySelector(\".gallery-track\");\nlet pagination;\nlet pages;\nlet currentPageIndex = 0;\nconst screenSizes = {\n    smallScreen: window.matchMedia(\"(max-width: 767px)\"),\n    mediumScreen: window.matchMedia(\"(min-width: 768px) and (max-width: 1023px)\"),\n    largeScreen: window.matchMedia(\"(min-width: 1024px)\")\n};\nfor(const key in screenSizes)screenSizes[key].addEventListener(\"change\", ()=>handleScreenSize(screenSizes));\nhandleScreenSize(screenSizes);\nfunction handleScreenSize(obj) {\n    for(const key in obj)if (obj[key].matches) switch(key){\n        case \"smallScreen\":\n            createPagination();\n            break;\n        case \"mediumScreen\":\n            createPagination();\n            break;\n        case \"largeScreen\":\n            if (!pagination) return;\n            else {\n                pagination.removeEventListener(\"touchstart\", handlePaginationTouch);\n                pagination.remove();\n            }\n            break;\n        default:\n            break;\n    }\n}\nfunction createPagination(e) {\n    if (pagination) {\n        pagination.removeEventListener(\"touchstart\", handlePaginationTouch);\n        pagination.remove();\n    }\n    const numberOfPages = Math.round(carouselTrack.scrollWidth / carousel.clientWidth);\n    pagination = document.createElement(\"ul\");\n    pagination.classList.add(\"gallery-pagination\");\n    for(let i = 0; i < numberOfPages; i++){\n        const page = document.createElement(\"li\");\n        page.classList.add(\"gallery-pagination__item\");\n        page.setAttribute(\"data-index\", i);\n        pagination.append(page);\n    }\n    pagination.firstElementChild.classList.add(\"gallery-pagination__item--active\");\n    carousel.append(pagination);\n    pages = pagination.children;\n    carouselTrack.removeEventListener(\"scroll\", onScroll);\n    carouselTrack.addEventListener(\"scroll\", onScroll);\n    pagination.addEventListener(\"touchstart\", handlePaginationTouch);\n}\nlet isScrolling;\nfunction onScroll() {\n    if (isScrolling) return;\n    isScrolling = true;\n    setTimeout(()=>{\n        const colGap = getComputedStyle(carouselTrack).columnGap;\n        const requestedPageIndex = Math.round((carouselTrack.scrollLeft - +colGap.slice(0, -2)) / carousel.clientWidth);\n        if (currentPageIndex !== requestedPageIndex) {\n            pages[currentPageIndex].classList.remove(\"gallery-pagination__item--active\");\n            pages[requestedPageIndex].classList.add(\"gallery-pagination__item--active\");\n            currentPageIndex = requestedPageIndex;\n        }\n        isScrolling = false;\n    }, 50);\n}\nfunction handlePaginationTouch(event) {\n    if (event.target.classList.contains(\"gallery-pagination__item\")) toggleActivity(event.target.dataset.index);\n}\nfunction toggleActivity(index) {\n    const selectedIndex = Number(index);\n    for(let i = 0; i < pages.length; i++)if (i === selectedIndex) {\n        pages[i].classList.add(\"gallery-pagination__item--active\");\n        carouselTrack.scrollLeft = carousel.clientWidth * i;\n    } else pages[i].classList.remove(\"gallery-pagination__item--active\");\n}\n\n//# sourceMappingURL=index.9b6cc96b.js.map\n","'use strict';\n\nconst button = document.querySelector('.scroll-top');\n\nwindow.addEventListener('scroll', () => {\n  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n    button.style.display = 'block';\n  } else {\n    button.style.display = 'none';\n  }\n});\n\nconst carousel = document.querySelector('.gallery-slider');\nconst carouselTrack = document.querySelector('.gallery-track');\nlet pagination;\nlet pages;\nlet currentPageIndex = 0;\n\nconst screenSizes = {\n  smallScreen: window.matchMedia(\"(max-width: 767px)\"),\n  mediumScreen: window.matchMedia(\"(min-width: 768px) and (max-width: 1023px)\"),\n  largeScreen: window.matchMedia(\"(min-width: 1024px)\"),\n};\n\nfor (const key in screenSizes) {\n  screenSizes[key].addEventListener('change', () => handleScreenSize(screenSizes));\n}\n\nhandleScreenSize(screenSizes);\n\nfunction handleScreenSize(obj) {\n  for (const key in obj) {\n    if (obj[key].matches) {\n      switch (key) {\n        case 'smallScreen':\n          createPagination();\n          break;\n\n        case 'mediumScreen':\n          createPagination();\n          break;\n\n        case 'largeScreen':\n          if (!pagination) {\n            return;\n          } else {\n            pagination.removeEventListener('touchstart', handlePaginationTouch);\n            pagination.remove();\n          }\n          break;\n\n          default:\n            break;\n      }\n    }\n  }\n}\n\nfunction createPagination(e) {\n  if (pagination) {\n    pagination.removeEventListener('touchstart', handlePaginationTouch);\n    pagination.remove();\n  }\n\n  const numberOfPages = Math.round(carouselTrack.scrollWidth / carousel.clientWidth);\n  pagination = document.createElement('ul');\n  pagination.classList.add('gallery-pagination');\n\n  for (let i = 0; i < numberOfPages; i++) {\n    const page = document.createElement('li');\n    page.classList.add('gallery-pagination__item');\n    page.setAttribute('data-index', i);\n    pagination.append(page);\n  }\n\n  pagination.firstElementChild.classList.add('gallery-pagination__item--active')\n  carousel.append(pagination);\n  pages = pagination.children;\n\n  carouselTrack.removeEventListener('scroll', onScroll);\n  carouselTrack.addEventListener('scroll', onScroll);\n\n  pagination.addEventListener('touchstart', handlePaginationTouch);\n}\n\nlet isScrolling;\n\nfunction onScroll() {\n  if (isScrolling) return;\n  isScrolling = true;\n\n  setTimeout(() => {\n    const colGap = getComputedStyle(carouselTrack).columnGap;\n    const requestedPageIndex = Math.round((carouselTrack.scrollLeft - (+colGap.slice(0, -2))) / carousel.clientWidth);\n    if (currentPageIndex !== requestedPageIndex) {\n      pages[currentPageIndex].classList.remove('gallery-pagination__item--active');\n      pages[requestedPageIndex].classList.add('gallery-pagination__item--active');\n      currentPageIndex = requestedPageIndex;\n    }\n    isScrolling = false;\n  }, 50);\n}\n\nfunction handlePaginationTouch(event) {\n  if (event.target.classList.contains('gallery-pagination__item')) {\n    toggleActivity(event.target.dataset.index);\n  }\n}\n\nfunction toggleActivity(index) {\n  const selectedIndex = Number(index);\n  for (let i = 0; i < pages.length; i++) {\n    if (i === selectedIndex) {\n      pages[i].classList.add('gallery-pagination__item--active');\n      carouselTrack.scrollLeft = carousel.clientWidth * i;\n    } else {\n      pages[i].classList.remove('gallery-pagination__item--active');\n    }\n  }\n}\n"],"names":["pagination","pages","isScrolling","button","document","querySelector","window","addEventListener","body","scrollTop","documentElement","style","display","carousel","carouselTrack","currentPageIndex","screenSizes","smallScreen","matchMedia","mediumScreen","largeScreen","key","handleScreenSize","obj","matches","createPagination","e","removeEventListener","handlePaginationTouch","remove","numberOfPages","Math","round","scrollWidth","clientWidth","createElement","classList","add","i","page","setAttribute","append","firstElementChild","children","onScroll","setTimeout","colGap","getComputedStyle","columnGap","requestedPageIndex","scrollLeft","slice","event","target","contains","toggleActivity","index","selectedIndex","Number","length","dataset"],"version":3,"file":"index.9b6cc96b.js.map"}